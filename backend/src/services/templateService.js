/**
 * @file: templateService.js
 * @description: –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å PDF —à–∞–±–ª–æ–Ω–∞–º–∏ (–∑–∞–≥—Ä—É–∑–∫–∞, –¥–µ—Ç–µ–∫—Ü–∏—è –º–µ—Ç–æ–∫, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è)
 * @dependencies: pdf-lib, pdfjs-dist, fs, crypto, path
 * @created: 2025-01-13
 */

import fs from 'fs/promises';
import crypto from 'crypto';
import path from 'path';
import { PDFDocument, StandardFonts, rgb } from 'pdf-lib';
import * as pdfjsLib from 'pdfjs-dist/legacy/build/pdf.mjs';
import { createEmptyManifest, validateManifest, findField, FIELD_NAMES, MARKERS } from '../models/Manifest.js';
import { detectMarkers, fillPDFWithValues } from '../utils/pdfProcessor.js';
import { calculateWaterConsumption, validateCalculationData, formatNumber } from './calculationsService.js';

const MANIFESTS_DIR = 'backend/storage/manifests';
const TEMPLATES_DIR = 'backend/storage/templates';

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç PDF —à–∞–±–ª–æ–Ω –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç
 * @param {Object} file - –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –æ—Ç multer
 * @returns {Promise<{templateId: string, manifest: Object}>}
 */
export async function uploadTemplate(file) {
  try {
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –≤—ã—á–∏—Å–ª—è–µ–º —Ö–µ—à
    const fileBuffer = await fs.readFile(file.path);
    const templateId = crypto.createHash('sha256').update(fileBuffer).digest('hex');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —à–∞–±–ª–æ–Ω
    const manifestPath = path.join(MANIFESTS_DIR, `${templateId}.json`);
    try {
      const existingManifest = JSON.parse(await fs.readFile(manifestPath, 'utf8'));
      if (validateManifest(existingManifest)) {
        return { templateId, manifest: existingManifest };
      }
    } catch (error) {
      // –ú–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    }
    
    // –î–µ—Ç–µ–∫—Ç–∏—Ä—É–µ–º –º–µ—Ç–∫–∏ –≤ PDF
    const markers = await detectMarkers(new Uint8Array(fileBuffer));
    
    // –°–æ–∑–¥–∞–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç
    const manifest = createEmptyManifest(templateId, file.originalname, 1);
    manifest.fields = markers;
    
    // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è
    const correctFileName = manifest.storageFileName;
    const correctFilePath = path.join(TEMPLATES_DIR, correctFileName);
    
    // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è
    await fs.rename(file.path, correctFilePath);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç
    await fs.mkdir(MANIFESTS_DIR, { recursive: true });
    await fs.writeFile(manifestPath, JSON.stringify(manifest, null, 2));
    
    return { templateId, manifest };
  } catch (error) {
    // –û—á–∏—â–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    try {
      await fs.unlink(file.path);
    } catch (unlinkError) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:', unlinkError.message);
    }
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –º–∞–Ω–∏—Ñ–µ—Å—Ç —à–∞–±–ª–æ–Ω–∞ –ø–æ ID
 * @param {string} templateId 
 * @returns {Promise<Object|null>}
 */
export async function getManifest(templateId) {
  try {
    const manifestPath = path.join(MANIFESTS_DIR, `${templateId}.json`);
    const manifestData = await fs.readFile(manifestPath, 'utf8');
    const manifest = JSON.parse(manifestData);
    
    return validateManifest(manifest) ? manifest : null;
  } catch (error) {
    return null;
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PDF —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 * @param {string} templateId 
 * @param {Object} values 
 * @param {Object} options 
 * @returns {Promise<Buffer>}
 */
export async function generatePDF(templateId, calculationData, options = {}) {
  try {
    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á—ë—Ç–æ–≤
    const validation = validateCalculationData(calculationData);
    if (!validation.valid) {
      throw new Error(`–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ${validation.errors.join(', ')}`);
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á—ë—Ç—ã –≤–æ–¥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è
    const calculations = calculateWaterConsumption(calculationData.dailyConsumption, options.calculationOptions);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –º–∞–ø–ø–∏–Ω–≥ –ø–æ–ª–µ–π –∏–∑ options (–ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞)
    const originalValues = options.originalValues || {};
    const fieldMappings = options.fieldMappings || {};
    
    // –ì–æ—Ç–æ–≤–∏–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
    const precision = (options.calculationOptions && options.calculationOptions.precision) || 2;
    
    // –î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö - —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –±–µ–∑ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
    const hourlyValue = formatNumber(calculations.hourlyConsumption, precision);
    const secondlyValue = formatNumber(calculations.secondlyConsumption, precision);
    const dailyValue = formatNumber(calculationData.dailyConsumption, precision);

    // –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ –∑–Ω–∞—á–µ–Ω–∏–π –∫ –∏–º–µ–Ω–∞–º –ø–æ–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ fieldMappings
    const mappedValues = {};
    
    // –ú–∞–ø–ø–∏–Ω–≥ –¥–ª—è –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö - –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    mappedValues[fieldMappings.dailyConsumption || 'msr_daily'] = dailyValue;
    mappedValues[fieldMappings.pumpModel || 'n'] = originalValues.pump_model || '';
    mappedValues[fieldMappings.flowMeter || 'flow_meter'] = originalValues.flow_meter || '';
    mappedValues[fieldMappings.projectCode || 'sh'] = originalValues.project_code || '';
    mappedValues[fieldMappings.requiredHead || 'mchr'] = originalValues.requiredHead || '';
    
    // –ú–∞–ø–ø–∏–Ω–≥ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—Å—á—ë—Ç–æ–≤ - —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    mappedValues[fieldMappings.hourlyConsumption || 'mchr'] = hourlyValue;
    mappedValues[fieldMappings.secondlyConsumption || 'msr_secondly'] = secondlyValue;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è msr (—Å–µ–∫—É–Ω–¥–Ω—ã–π —Ä–∞—Å—Ö–æ–¥) –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥
    if (!fieldMappings.secondlyConsumption) {
      const msrSecondlyMarker = fieldMappings.dailyConsumption ? 
        fieldMappings.dailyConsumption + '_secondly' : 'msr_secondly';
      mappedValues[msrSecondlyMarker] = secondlyValue;
    }

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ä–∞—Å—á—ë—Ç–æ–≤
    const enrichedValues = {
      ...originalValues,
      // –ß–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–º–æ–≥—É—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è)
      hourlyConsumption: calculations.hourlyConsumption,
      secondlyConsumption: calculations.secondlyConsumption,
      // –°—Ç—Ä–æ–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ PDF (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏–º–µ–Ω–∞) - —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
      msr_daily: dailyValue,
      max_hourly: hourlyValue,
      msr_secondly: secondlyValue,
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏
      ...mappedValues
    };

    // –ü–æ–ª—É—á–∞–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç
    const manifest = await getManifest(templateId);
    if (!manifest) {
      throw new Error(`–®–∞–±–ª–æ–Ω ${templateId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞ (—Å fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤)
    const storageFileName = manifest.storageFileName || `template_${templateId}.pdf`;
    const templatePath = path.join(TEMPLATES_DIR, storageFileName);
    console.log(`üìÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —à–∞–±–ª–æ–Ω: ${templatePath}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    try {
      await fs.access(templatePath);
    } catch (error) {
      // Fallback: –∏—â–µ–º –ª—é–±–æ–π —Ñ–∞–π–ª —Å templateId –≤ –∏–º–µ–Ω–∏
      console.log(`üìÑ Fallback: –∏—â–µ–º —Ñ–∞–π–ª —Å templateId ${templateId}`);
      const files = await fs.readdir(TEMPLATES_DIR);
      console.log(`üìÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:`, files);
      
      const templateFile = files.find(f => f.includes(templateId) && f.endsWith('.pdf'));
      if (!templateFile) {
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ templateId, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π PDF —Ñ–∞–π–ª
        const anyPdfFile = files.find(f => f.endsWith('.pdf'));
        if (!anyPdfFile) {
          throw new Error(`–§–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –¥–ª—è ${templateId} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–∫–∞–ª–∏: ${storageFileName}. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã: ${files.join(', ')}`);
        }
        console.log(`üìÑ Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª—é–±–æ–π PDF —Ñ–∞–π–ª ${anyPdfFile}`);
        const fallbackPath = path.join(TEMPLATES_DIR, anyPdfFile);
        
        // –ß–∏—Ç–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ fallback –ø—É—Ç–∏
        const templateBuffer = await fs.readFile(fallbackPath);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º PDF —Å –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        const filledBuffer = await fillPDFWithValues(templateBuffer, manifest, enrichedValues, options);
        
        return filledBuffer;
      }
      
      const fallbackPath = path.join(TEMPLATES_DIR, templateFile);
      console.log(`üìÑ Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º ${fallbackPath}`);
      
      // –ß–∏—Ç–∞–µ–º —à–∞–±–ª–æ–Ω –∏–∑ fallback –ø—É—Ç–∏
      const templateBuffer = await fs.readFile(fallbackPath);
      
      // –ó–∞–ø–æ–ª–Ω—è–µ–º PDF —Å –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      const filledBuffer = await fillPDFWithValues(templateBuffer, manifest, enrichedValues, options);
      
      return filledBuffer;
    }
    
    // –ß–∏—Ç–∞–µ–º —à–∞–±–ª–æ–Ω
    const templateBuffer = await fs.readFile(templatePath);
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º PDF —Å –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const filledBuffer = await fillPDFWithValues(templateBuffer, manifest, enrichedValues, options);
    
    return filledBuffer;
  } catch (error) {
    throw new Error(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF: ${error.message}`);
  }
}

/**
 * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
 * @param {Object} values 
 * @param {Object} manifest 
 * @returns {Object} {valid: boolean, errors: string[]}
 */
export function validateValues(values, manifest) {
  const errors = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
  const requiredFields = manifest.fields.map(f => f.name);
  for (const fieldName of requiredFields) {
    if (!(fieldName in values)) {
      errors.push(`–ü–æ–ª–µ ${fieldName} –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ`);
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
  for (const [key, value] of Object.entries(values)) {
    if (typeof value !== 'string' && typeof value !== 'number') {
      errors.push(`–ü–æ–ª–µ ${key} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ —á–∏—Å–ª–æ–º`);
    }
  }
  
  return {
    valid: errors.length === 0,
    errors
  };
}
